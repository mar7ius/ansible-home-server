---
- name: Create Traefik Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik_data_directory }}"
    - "{{ traefik_data_directory }}/letsencrypt"
    - "{{ traefik_data_directory }}/custom-rules"

- name: Template Traefik config.yml
  template:
    src: traefik.yml
    dest: "{{ traefik_data_directory }}/traefik.yml"
  register: template_config

# - name: Template Traefik middleware
#   template:
#     src: middlewares.yml
#     dest: "{{ traefik_data_directory }}/custom-rules/middlewares.yml"
#   register: middleware_config

# - name: Template Traefik middleware-chains
#   template:
#     src: middlewares-chains.yml
#     dest: "{{ traefik_data_directory }}/custom-rules/middlewares-chains.yml"
#   register: middleware_chains_config

- name: Traefik Docker Container
  docker_container:
    name: traefik
    image: "{{ traefik_docker_image }}"
    pull: true
    hostname: traefik
    ports:
      - "{{ traefik_port_http }}:80"
      - "{{ traefik_port_https }}:443"
      - "{{ traefik_port_ui }}:8083"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ traefik_data_directory }}/letsencrypt:/letsencrypt:rw"
      - "{{ traefik_data_directory }}/traefik.yml:/etc/traefik/traefik.yml:ro"
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: "Host(`traefik.{{ server_domain }}`)"
      traefik.http.routers.traefik.service: "api@internal"
      traefik.http.routers.traefik.entrypoints: "websecure"
      ## middlewares: ##
      traefik.http.middlewares.authelia.forwardauth.address: "http://authelia:9091/api/verify?rd=https://{{authelia_hostname}}.{{ server_domain }}"
      traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: "true"
      traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: "Remote-User, Remote-Groups, Remote-Name, Remote-Email"
      ## Certificates: ##
      traefik.http.routers.traefik.tls.certresolver: "letsencrypt"
      traefik.http.routers.traefik.tls.domains[0].main: "{{ server_domain }}"
      traefik.http.routers.traefik.tls.domains[0].sans: "*.{{ server_domain }}"
    env: "{{ traefik_environment_variables }}"
    restart_policy: unless-stopped
    memory: "{{ traefik_memory }}"
    recreate: "{{ template_config is changed }}"
