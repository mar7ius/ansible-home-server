---
- name: Create Filesystem for Docker
  community.general.zfs:
    name: "{{ traefik_volume }}"
    state: present
    extra_zfs_properties:
      mountpoint: "{{ traefik_mountpoint }}"

- name: Create Rules Directory
  file:
    path: "{{ traefik_mountpoint }}/rules"
    state: directory

- name: Create Certificates Directory
  file:
    path: "{{ traefik_mountpoint }}/certs"
    state: directory

- name: Template Traefik Static Configuration File
  template:
    src: traefik.yml
    dest: "{{ traefik_mountpoint }}/traefik.yml"
  register: template_config

- name: Template Traefik Middlewares
  template:
    src: rules/middlewares.yml
    dest: "{{ traefik_mountpoint }}/rules/middlewares.yml"

- name: Template Traefik Chained Middlewares
  template:
    src: rules/middlewares-chains.yml
    dest: "{{ traefik_mountpoint }}/rules/middlewares-chains.yml"

# - name: Template Traefik TLS Options
#   template:
#     src: rules/tls-opts.yml
#     dest: "{{ traefik_mountpoint }}/rules/tls-opts.yml"

- name: Traefik Docker Container
  docker_container:
    name: traefik
    image: "{{ traefik_docker_image }}"
    pull: true
    hostname: traefik
    networks:
      - name: "{{ custom_network_name }}"
        aliases:
          - traefik
    network_mode: "{{ custom_network_name }}"
    networks_cli_compatible: yes
    ports:
      - "{{ traefik_port_http }}:80"
      - "{{ traefik_port_https }}:443"
      - "{{ traefik_port_ui }}:8083"
    volumes:
      # - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ traefik_mountpoint }}/rules:/rules:rw" # Dynamic configuration
      - "{{ traefik_mountpoint }}/certs:/certs:rw" # Cloudflare Origin Certs
      - "{{ traefik_mountpoint }}/traefik.yml:/etc/traefik/traefik.yml:ro" # static config file
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: "Host(`{{ traefik_hostname }}.{{ server_domain }}`)"
      traefik.http.routers.traefik.entrypoints: "websecure"
      traefik.http.routers.traefik.tls.certresolver: "cloudflare"
      traefik.http.routers.traefik.tls.domains[0].main: "*.{{ server_domain }}"
      traefik.http.routers.traefik.tls.domains[0].sans: "{{ server_domain }}"
      traefik.http.routers.traefik.service: "api@internal"
      traefik.http.routers.traefik.middlewares: "chain-authelia@file"
      traefik.http.routers.redirect-https.rule: "hostregexp(`{host:.+}`)"
      traefik.http.routers.redirect-https.entrypoints: "web"
      traefik.http.routers.redirect-https.middlewares: "middlewares-https-redirectscheme@file"
    env: "{{ traefik_environment_variables }}"
    restart_policy: unless-stopped
    memory: "{{ traefik_memory }}"
    memory_swap: "{{ traefik_swap }}"
    # recreate: "{{ template_config is changed }}"
    recreate: "{{ recreate_containers }}"
