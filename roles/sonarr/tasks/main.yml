---
- name: Create filesystem for Sonarr
  community.general.zfs:
    name: "{{ sonarr_volume }}"
    state: present
    extra_zfs_properties:
      mountpoint: "{{ sonarr_mountpoint }}"

- name: Sonarr
  docker_container:
    name: sonarr
    image: linuxserver/sonarr
    pull: true
    hostname: sonarr
    networks:
      - name: "{{ custom_network_name }}"
        aliases:
          - sonarr
    network_mode: "{{ custom_network_name }}"
    networks_cli_compatible: yes
    volumes:
      - "{{ sonarr_tv_directory }}:/tvshows:rw"
      - "{{ sonarr_download_directory }}:/downloads:rw"
      - "{{ sonarr_mountpoint }}:/config:rw"
    ports:
      - "{{ sonarr_port }}:8989"
    env:
      TZ: "{{ server_timezone }}"
      PUID: "{{ sonarr_user_id }}"
      PGID: "{{ sonarr_group_id }}"
    restart_policy: unless-stopped
    memory: "{{ sonarr_memory }}"
    memory_swap: "{{ sonarr_swap }}"
    labels:
      traefik.enable: "{{ sonarr_available_externally }}"
      traefik.http.routers.sonarr.rule: "Host(`{{ sonarr_hostname }}.{{ server_domain }}`)"
      traefik.http.routers.sonarr.entrypoints: "websecure"
      traefik.http.routers.sonarr.tls.certresolver: "cloudflare"
      traefik.http.routers.sonarr.tls.domains[0].main: "*.{{ server_domain }}"
      traefik.http.routers.sonarr.tls.domains[0].sans: "{{ server_domain }}"
      traefik.http.routers.sonarr.middlewares: "chain-authelia@file"
      traefik.http.services.sonarr.loadbalancer.server.port: "{{ sonarr_port }}"
